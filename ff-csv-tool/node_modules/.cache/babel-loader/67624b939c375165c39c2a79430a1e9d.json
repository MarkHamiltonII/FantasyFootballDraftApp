{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markh\\\\Documents\\\\personal_projects\\\\FantasyFootball\\\\ff-csv-tool\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Rankings from './components/Rankings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EMPTY_RANKINGS = [{\n  \"Rank\": \"1\",\n  \"Player\": \"Jonathan Taylor\",\n  \"Eligible_Position\": \"RB\",\n  \"Team\": \"Indianapolis Colts\",\n  \"Position_Rank\": \"RB1\"\n}];\n\nfunction App() {\n  _s();\n\n  const [csvFile, setCsvFile] = useState(null);\n  const [rankings, setRankings] = useState([]);\n  const [fetchRank, setFetchRank] = useState(false);\n\n  function csvToArray(str) {\n    let delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \", \";\n    // slice from start of text to the first \\n index\n    // use split to create an array from string by delimiter\n    const headers = str.slice(0, str.indexOf(\"\\n\") - 1).split(delimiter); // slice from \\n index + 1 to the end of the text\n    // use split to create an array of each csv value row\n\n    const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\r\\n\"); // Map the rows\n    // split values from each row into an array\n    // use headers.reduce to create an object\n    // object properties derived from headers:values\n    // the object passed as an element of the array\n\n    const arr = rows.map(function (row) {\n      const values = row.split(delimiter);\n      const el = headers.reduce((object, header, index) => {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return el;\n    }); // return the array\n\n    return arr;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const input = csvFile;\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      const data = csvToArray(text); // setRankings(JSON.stringify(data));\n\n      setFetchRank(true);\n      console.log(JSON.stringify(data));\n    };\n\n    reader.readAsText(input);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to FF Helper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"myForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"csvFile\",\n        accept: \".csv\",\n        onChange: e => setCsvFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rankings, {\n      rankings: rankings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rTGtMB+YXqU+xAeyOfkNmBOof7g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Rankings","EMPTY_RANKINGS","App","csvFile","setCsvFile","rankings","setRankings","fetchRank","setFetchRank","csvToArray","str","delimiter","headers","slice","indexOf","split","rows","arr","map","row","values","el","reduce","object","header","index","handleSubmit","e","preventDefault","input","reader","FileReader","onload","text","target","result","data","console","log","JSON","stringify","readAsText","files"],"sources":["C:/Users/markh/Documents/personal_projects/FantasyFootball/ff-csv-tool/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Rankings from './components/Rankings';\n\nconst EMPTY_RANKINGS =[{\n  \"Rank\":\"1\",\n  \"Player\":\"Jonathan Taylor\",\n  \"Eligible_Position\":\"RB\",\n  \"Team\":\"Indianapolis Colts\",\n  \"Position_Rank\":\"RB1\"\n}]\n\nfunction App() {\n\n  const [csvFile, setCsvFile] = useState(null);\n  const [rankings, setRankings] = useState([]);\n  const [fetchRank, setFetchRank] = useState(false);\n\n  function csvToArray(str, delimiter = \", \") {\n\n    // slice from start of text to the first \\n index\n    // use split to create an array from string by delimiter\n    const headers = str.slice(0, str.indexOf(\"\\n\")-1).split(delimiter);\n\n    // slice from \\n index + 1 to the end of the text\n    // use split to create an array of each csv value row\n    const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\r\\n\");\n\n    // Map the rows\n    // split values from each row into an array\n    // use headers.reduce to create an object\n    // object properties derived from headers:values\n    // the object passed as an element of the array\n    const arr = rows.map(function (row) {\n      const values = row.split(delimiter);\n      const el = headers.reduce( (object, header, index) => {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return el;\n    });\n\n    // return the array\n    return arr;\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const input = csvFile;\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      const data = csvToArray(text);\n      // setRankings(JSON.stringify(data));\n      setFetchRank(true);\n      console.log(JSON.stringify(data));\n    };\n\n    reader.readAsText(input);\n\n  };\n\n\n  return (\n    <div className=\"App\">\n      <h2>Welcome to FF Helper</h2>\n      <form id=\"myForm\" onSubmit={handleSubmit}>\n        <input type=\"file\" id=\"csvFile\" accept=\".csv\" onChange={(e) => setCsvFile(e.target.files[0])}/>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <Rankings rankings={rankings}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,cAAc,GAAE,CAAC;EACrB,QAAO,GADc;EAErB,UAAS,iBAFY;EAGrB,qBAAoB,IAHC;EAIrB,QAAO,oBAJc;EAKrB,iBAAgB;AALK,CAAD,CAAtB;;AAQA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;EAEA,SAASU,UAAT,CAAoBC,GAApB,EAA2C;IAAA,IAAlBC,SAAkB,uEAAN,IAAM;IAEzC;IACA;IACA,MAAMC,OAAO,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaH,GAAG,CAACI,OAAJ,CAAY,IAAZ,IAAkB,CAA/B,EAAkCC,KAAlC,CAAwCJ,SAAxC,CAAhB,CAJyC,CAMzC;IACA;;IACA,MAAMK,IAAI,GAAGN,GAAG,CAACG,KAAJ,CAAUH,GAAG,CAACI,OAAJ,CAAY,IAAZ,IAAoB,CAA9B,EAAiCC,KAAjC,CAAuC,MAAvC,CAAb,CARyC,CAUzC;IACA;IACA;IACA;IACA;;IACA,MAAME,GAAG,GAAGD,IAAI,CAACE,GAAL,CAAS,UAAUC,GAAV,EAAe;MAClC,MAAMC,MAAM,GAAGD,GAAG,CAACJ,KAAJ,CAAUJ,SAAV,CAAf;MACA,MAAMU,EAAE,GAAGT,OAAO,CAACU,MAAR,CAAgB,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,KAA2B;QACpDF,MAAM,CAACC,MAAD,CAAN,GAAiBJ,MAAM,CAACK,KAAD,CAAvB;QACA,OAAOF,MAAP;MACD,CAHU,EAGR,EAHQ,CAAX;MAIA,OAAOF,EAAP;IACD,CAPW,CAAZ,CAfyC,CAwBzC;;IACA,OAAOJ,GAAP;EACD;;EAED,MAAMS,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IACA,MAAMC,KAAK,GAAG1B,OAAd;IACA,MAAM2B,MAAM,GAAG,IAAIC,UAAJ,EAAf;;IAEAD,MAAM,CAACE,MAAP,GAAgB,UAAUL,CAAV,EAAa;MAC3B,MAAMM,IAAI,GAAGN,CAAC,CAACO,MAAF,CAASC,MAAtB;MACA,MAAMC,IAAI,GAAG3B,UAAU,CAACwB,IAAD,CAAvB,CAF2B,CAG3B;;MACAzB,YAAY,CAAC,IAAD,CAAZ;MACA6B,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAZ;IACD,CAND;;IAQAN,MAAM,CAACW,UAAP,CAAkBZ,KAAlB;EAED,CAfD;;EAkBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,EAAE,EAAC,QAAT;MAAkB,QAAQ,EAAEH,YAA5B;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,SAAtB;QAAgC,MAAM,EAAC,MAAvC;QAA8C,QAAQ,EAAGC,CAAD,IAAOvB,UAAU,CAACuB,CAAC,CAACO,MAAF,CAASQ,KAAT,CAAe,CAAf,CAAD;MAAzE;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC;MAA3B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAME,QAAC,QAAD;MAAU,QAAQ,EAAErC;IAApB;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA9DQH,G;;KAAAA,G;AAgET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}