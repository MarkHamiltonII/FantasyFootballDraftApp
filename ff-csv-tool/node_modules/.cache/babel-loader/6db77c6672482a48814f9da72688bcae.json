{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markh\\\\Documents\\\\personal_projects\\\\FantasyFootball\\\\ff-csv-tool\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [csvFile, setCsvFile] = useState('');\n\n  function csvToArray(str) {\n    let delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \",\";\n    // slice from start of text to the first \\n index\n    // use split to create an array from string by delimiter\n    const headers = str.slice(0, str.indexOf(\"\\n\")).split(delimiter); // slice from \\n index + 1 to the end of the text\n    // use split to create an array of each csv value row\n\n    const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\n\"); // Map the rows\n    // split values from each row into an array\n    // use headers.reduce to create an object\n    // object properties derived from headers:values\n    // the object passed as an element of the array\n\n    const arr = rows.map(function (row) {\n      const values = row.split(delimiter);\n      const el = headers.reduce(function (object, header, index) {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return el;\n    }); // return the array\n\n    return arr;\n  }\n\n  const handleChange = e => {\n    setCsvFile(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const input = csvFile.files[0];\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      const data = csvToArray(text);\n      document.write(JSON.stringify(data));\n    };\n\n    reader.readAsText(input);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to FF Helper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"myForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"csvFile\",\n        accept: \".csv\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"L5xLc210cZaE5S5z/pcNxNC7q4E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","csvFile","setCsvFile","csvToArray","str","delimiter","headers","slice","indexOf","split","rows","arr","map","row","values","el","reduce","object","header","index","handleChange","e","target","value","handleSubmit","preventDefault","input","files","reader","FileReader","onload","text","result","data","document","write","JSON","stringify","readAsText"],"sources":["C:/Users/markh/Documents/personal_projects/FantasyFootball/ff-csv-tool/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [csvFile, setCsvFile] = useState('');\n\n  function csvToArray(str, delimiter = \",\") {\n\n    // slice from start of text to the first \\n index\n    // use split to create an array from string by delimiter\n    const headers = str.slice(0, str.indexOf(\"\\n\")).split(delimiter);\n\n    // slice from \\n index + 1 to the end of the text\n    // use split to create an array of each csv value row\n    const rows = str.slice(str.indexOf(\"\\n\") + 1).split(\"\\n\");\n\n    // Map the rows\n    // split values from each row into an array\n    // use headers.reduce to create an object\n    // object properties derived from headers:values\n    // the object passed as an element of the array\n    const arr = rows.map(function (row) {\n      const values = row.split(delimiter);\n      const el = headers.reduce(function (object, header, index) {\n        object[header] = values[index];\n        return object;\n      }, {});\n      return el;\n    });\n\n    // return the array\n    return arr;\n  }\n\n  const handleChange = (e) => {\n    setCsvFile(e.target.value)\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const input = csvFile.files[0];\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const text = e.target.result;\n      const data = csvToArray(text);\n      document.write(JSON.stringify(data));\n    };\n\n    reader.readAsText(input);\n    \n  };\n\n\n  return (\n    <div className=\"App\">\n      <h2>Welcome to FF Helper</h2>\n      <form id=\"myForm\" onSubmit={handleSubmit}>\n        <input type=\"file\" id=\"csvFile\" accept=\".csv\" onChange={handleChange}/>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;;EAEA,SAASI,UAAT,CAAoBC,GAApB,EAA0C;IAAA,IAAjBC,SAAiB,uEAAL,GAAK;IAExC;IACA;IACA,MAAMC,OAAO,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaH,GAAG,CAACI,OAAJ,CAAY,IAAZ,CAAb,EAAgCC,KAAhC,CAAsCJ,SAAtC,CAAhB,CAJwC,CAMxC;IACA;;IACA,MAAMK,IAAI,GAAGN,GAAG,CAACG,KAAJ,CAAUH,GAAG,CAACI,OAAJ,CAAY,IAAZ,IAAoB,CAA9B,EAAiCC,KAAjC,CAAuC,IAAvC,CAAb,CARwC,CAUxC;IACA;IACA;IACA;IACA;;IACA,MAAME,GAAG,GAAGD,IAAI,CAACE,GAAL,CAAS,UAAUC,GAAV,EAAe;MAClC,MAAMC,MAAM,GAAGD,GAAG,CAACJ,KAAJ,CAAUJ,SAAV,CAAf;MACA,MAAMU,EAAE,GAAGT,OAAO,CAACU,MAAR,CAAe,UAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiC;QACzDF,MAAM,CAACC,MAAD,CAAN,GAAiBJ,MAAM,CAACK,KAAD,CAAvB;QACA,OAAOF,MAAP;MACD,CAHU,EAGR,EAHQ,CAAX;MAIA,OAAOF,EAAP;IACD,CAPW,CAAZ,CAfwC,CAwBxC;;IACA,OAAOJ,GAAP;EACD;;EAED,MAAMS,YAAY,GAAIC,CAAD,IAAO;IAC1BnB,UAAU,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;EACD,CAFD;;EAIA,MAAMC,YAAY,GAAIH,CAAD,IAAO;IAC1BA,CAAC,CAACI,cAAF;IACA,MAAMC,KAAK,GAAGzB,OAAO,CAAC0B,KAAR,CAAc,CAAd,CAAd;IACA,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;IAEAD,MAAM,CAACE,MAAP,GAAgB,UAAUT,CAAV,EAAa;MAC3B,MAAMU,IAAI,GAAGV,CAAC,CAACC,MAAF,CAASU,MAAtB;MACA,MAAMC,IAAI,GAAG9B,UAAU,CAAC4B,IAAD,CAAvB;MACAG,QAAQ,CAACC,KAAT,CAAeC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAf;IACD,CAJD;;IAMAL,MAAM,CAACU,UAAP,CAAkBZ,KAAlB;EAED,CAbD;;EAgBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,EAAE,EAAC,QAAT;MAAkB,QAAQ,EAAEF,YAA5B;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,EAAE,EAAC,SAAtB;QAAgC,MAAM,EAAC,MAAvC;QAA8C,QAAQ,EAAEJ;MAAxD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,QAAZ;QAAqB,KAAK,EAAC;MAA3B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA7DQpB,G;;KAAAA,G;AA+DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}